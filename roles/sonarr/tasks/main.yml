---
- name: Create a k8s namespace
  kubernetes.core.k8s:
    name: "{{ sonarr_namespace }}"
    api_version: v1
    kind: Namespace
    state: present
  when: sonarr_enabled

- name: Deploy sonarr config persistent volume local
  ansible.builtin.include_role:
    name: etiennebarbier.k8s_applications_utils.local_pv
  vars:
    local_pv_path: "{{ sonarr_config_pv_local_path }}"
    local_pv_node_affinity: "{{ sonarr_config_pv_local_node_affinity }}"
    local_pv_pvc_namespace: "{{ sonarr_namespace }}"
    local_pv_pvc_name: "sonarr-config"
    local_pv_size: "{{ sonarr_config_pv_size }}"
  when:
    - sonarr_enabled
    - sonarr_config_pv_enabled
    - sonarr_config_pv_creation == 'manual_local'

- name: Deploy sonarr config persistent volume nfs
  ansible.builtin.include_role:
    name: etiennebarbier.k8s_applications_utils.nfs_pv
  vars:
    nfs_pv_nfs_server: "{{ sonarr_config_pv_nfs_server }}"
    nfs_pv_nfs_path: "{{ sonarr_config_pv_nfs_path }}"
    nfs_pv_nfs_mount_options: "{{ sonarr_config_pv_nfs_mount_options }}"
    nfs_pv_pvc_namespace: "{{ sonarr_namespace }}"
    nfs_pv_pvc_name: "sonarr-config"
    nfs_pv_size: "{{ sonarr_config_pv_size }}"
    nfs_pv_file_owner: "{{ sonarr_run_user }}"
    nfs_pv_file_group: "{{ sonarr_run_group }}"
  when:
    - sonarr_enabled
    - sonarr_config_pv_enabled
    - sonarr_config_pv_creation == 'manual_nfs'

- name: Deploy sonarr chart with values loaded from template
  kubernetes.core.helm:
    name: sonarr
    release_namespace: "{{ sonarr_namespace }}"
    chart_ref: "{{ sonarr_helm_repo_name }}/sonarr"
    values: "{{ lookup('template', 'sonarr.yml.j2') | from_yaml }}"
    state: "{{ 'present' if sonarr_enabled else 'absent' }}"
    update_repo_cache: true
