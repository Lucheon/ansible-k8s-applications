---
strategy:
  type: Recreate

image:
  repository: {{ plex_image_name }}
  pullPolicy: IfNotPresent
  tag: {{ plex_image_version }}

env:
  TZ: "Etc/UTC"
  PLEX_CLAIM_TOKEN: {{ plex_claim }}

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: {{ plex_run_group }}
  runAsUser: {{ plex_run_user }}
  runAsGroup: {{ plex_run_group }}

service:
  type: {{ plex_service_type }}
  port: {{ plex_service_port }}

ingress:
{% if plex_ingress_enabled %}
  enabled: true
{% else %}
  enable: false
{% endif %}
  className: {{ plex_ingress_class_name }}
  annotations: {{ plex_ingress_annotations }}
  hosts:
    - host: {{ plex_ingress_host }}
      paths:
        - path: {{ plex_ingress_path }}
          pathType: ImplementationSpecific
{% if plex_ingress_tls %}
  tls:
  - secretName: plex-tls
    hosts:
      - {{ plex_ingress_host }}
{% else %}
  tls: []
{% endif %}

extraVolumes: {{ plex_volumes }}

extraVolumeMounts: {{ plex_volume_mounts }}

persistence:
  config:
{% if plex_config_pv_enabled %}
    enabled: true
{% else %}
    enabled: false
{% endif %}
    ## If defined, storageClassName: <storageClass>
    ## If set to "-", storageClassName: "", which disables dynamic provisioning
    ## If undefined (the default) or set to null, no storageClassName spec is
    ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
    ##   GKE, AWS & OpenStack)
    ##
    storageClass: {{ plex_config_pv_storage_class }}
    annotations: {}
    existingClaim: {{ plex_config_pv_existing_claim }}
    accessModes: {{ plex_config_pv_access_modes | to_yaml }}
    size: {{ plex_config_pv_size }}
{% if plex_config_pv_creation != 'auto' %}
    existingClaim: plex-config
{% else %}
    existingClaim: {{ plex_config_pv_existing_claim }}
{% endif %}

resources: {{ plex_resources }}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}
